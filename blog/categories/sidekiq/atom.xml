<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Sidekiq | 熊爸天下]]></title>
  <link href="http://jimmy0328.github.io/blog/categories/sidekiq/atom.xml" rel="self"/>
  <link href="http://jimmy0328.github.io/"/>
  <updated>2016-07-11T23:49:22+08:00</updated>
  <id>http://jimmy0328.github.io/</id>
  <author>
    <name><![CDATA[Jimmy Lin]]></name>
    <email><![CDATA[jimmy0328@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Sidekiq 初體驗]]></title>
    <link href="http://jimmy0328.github.io/blog/2016/06/20/sidekiq/"/>
    <updated>2016-06-20T21:49:24+08:00</updated>
    <id>http://jimmy0328.github.io/blog/2016/06/20/sidekiq</id>
    <content type="html"><![CDATA[<p>Simple, efficient background processing for Ruby.</p>

<p>之後會配合redis、rails 來做非同步的背景Job，今天先來一個sidekiq 的簡單ruby 程式練習</p>

<h2>安裝</h2>

<h4>Step1 : 建立一個目錄</h4>

<pre><code>mkdir MyJob
</code></pre>

<h4>Step2 : 在MyJob目錄中建立一個Gemfile</h4>

<pre><code>cd MyJob
</code></pre>

<pre><code>touch Gemfile
</code></pre>

<p>Gemfile 如下
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source &ldquo;&lt;a href="https://rubygems.org"&gt;https://rubygems.org&lt;/a&gt;&rdquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;gem &lsquo;sidekiq&rsquo;</span></code></pre></td></tr></table></div></figure>
之後記得 bundle install</p>

<h4>Step3 : 撰寫ruby程式</h4>

<p>myworker.rb
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>require &ldquo;sidekiq&rdquo;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Sidekiq.configure_client do |config|
</span><span class='line'>  config.redis = { db: 1 }
</span><span class='line'>end&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Sidekiq.configure_server do |config|
</span><span class='line'>  config.redis = { db: 1 }
</span><span class='line'>end&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;class MyWorker&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  include Sidekiq::Worker&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;  def perform(name)
</span><span class='line'>    puts &ldquo;Hello , #{name}&rdquo;
</span><span class='line'>  end
</span><span class='line'>end&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>#### Step4 : 測試
</span><span class='line'>
</span><span class='line'>執行sidekiq
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;bundle exec sidekiq -r ./myworker.rb</span></code></pre></td></tr></table></div></figure></p>

<p>進入console 模式測試 worker
<code>
irb -r ./myworker.rb
</code>
在irb中測試一下</p>

<pre><code>MyWorker.perform_async("Ruby")
MyWorker.perform_in(5.minutes, "Ruby")
</code></pre>

<p><img src="/images/sidekiq/sidekiq_test.png" alt="Alt text" /></p>

<p>打完收工，之後當然是要把sidekiq 串接到Rails中，之後會再介紹</p>

<h2>參考資料</h2>

<p><a href="https://www.youtube.com/watch?v=bfPb1zD91Rg&amp;list=PLjeHh2LSCFrWGT5uVjUuFKAcrcj5kSai1&amp;index=1">You Tube 介紹</a></p>

<p><a href="https://github.com/mperham/sidekiq/wiki">sidekiq wiki</a></p>
]]></content>
  </entry>
  
</feed>
